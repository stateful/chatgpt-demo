/**
 * A sample async function (to demo Typescript's es7 async/await down-leveling).
 *
 * ### Example (es imports)
 * ```js
 * import { asyncABC } from 'typescript-starter'
 * console.log(await asyncABC())
 * // => ['a','b','c']
 * ```
 *
 * ### Example (commonjs)
 * ```js
 * var double = require('typescript-starter').asyncABC;
 * asyncABC().then(console.log);
 * // => ['a','b','c']
 * ```
 *
 * @returns a Promise which should contain `['a','b','c']`
 */
// export const asyncABC = async () => {
//   const somethingSlow = (index: 0 | 1 | 2) => {
//     const storage = 'abc'.charAt(index);
//     return new Promise<string>((resolve) =>
//       // later...
//       resolve(storage)
//     );
//   };
//   const a = await somethingSlow(0);
//   const b = await somethingSlow(1);
//   const c = await somethingSlow(2);
//   return [a, b, c];
// };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXN5bmMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL2FzeW5jLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FrQkc7QUFDSCx3Q0FBd0M7QUFDeEMsa0RBQWtEO0FBQ2xELDJDQUEyQztBQUMzQyw4Q0FBOEM7QUFDOUMsb0JBQW9CO0FBQ3BCLHlCQUF5QjtBQUN6QixTQUFTO0FBQ1QsT0FBTztBQUNQLHNDQUFzQztBQUN0QyxzQ0FBc0M7QUFDdEMsc0NBQXNDO0FBQ3RDLHNCQUFzQjtBQUN0QixLQUFLIn0=