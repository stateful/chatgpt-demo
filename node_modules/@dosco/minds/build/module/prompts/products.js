import { isEmpty, flow, uniqBy, map, join } from 'lodash';
var ProductInfo;
(function (ProductInfo) {
    ProductInfo["ProductName"] = "Product Name";
    ProductInfo["ProductDescription"] = "Product Description";
    ProductInfo["ProductModelNumber"] = "Product Model Number";
    ProductInfo["ProductSerialNumber"] = "Product Serial Number";
    ProductInfo["ProductPurchaseDate"] = "Product Purchase Date";
})(ProductInfo || (ProductInfo = {}));
var PurchaseInfo;
(function (PurchaseInfo) {
    PurchaseInfo["OrderID"] = "Order ID";
    PurchaseInfo["OrderQuantity"] = "Order Quantity";
    PurchaseInfo["AccountNumber"] = "Account Number";
    PurchaseInfo["ShippingAddress"] = "Shipping Address";
    PurchaseInfo["BillingAddress"] = "Billing Address";
    PurchaseInfo["PaymentMethod"] = "Payment method";
})(PurchaseInfo || (PurchaseInfo = {}));
var SupportInfo;
(function (SupportInfo) {
    SupportInfo["IssueDescription"] = "Issue Description";
    SupportInfo["ErrorMessage"] = "Error Message";
    SupportInfo["TroubleshootingStepsTaken"] = "Troubleshooting Steps Taken";
    SupportInfo["SupportTicketNumber"] = "Support Ticket Number";
    SupportInfo["SupportAgentName"] = "Support Agent Name";
    SupportInfo["ContactInformation"] = "Contact Information";
    SupportInfo["Feedback"] = "Feedback";
    SupportInfo["OrderDetailsIncluded"] = "Order Details Included";
    SupportInfo["ShippingDetailsIncluded"] = "Shipping Details Included";
})(SupportInfo || (SupportInfo = {}));
/**
 * A prompt used for extracting information from customer support interactions
 * @export
 */
export class ExtractInfoPrompt {
    entityValue;
    constructor(entities) {
        if (isEmpty(entities)) {
            throw new Error(`No info defined to extract`);
        }
        // unique names and classes
        this.entityValue = flow(uniqBy((v) => v.name), map((v) => (v.name, join(uniqBy(v.classes), ','))), map(([n, c]) => `${n}:${c ? ` [${c}]` : ``}`), join('\n'))(entities);
    }
    metadata() {
        return {
            stopSequences: ['Text:'],
        };
    }
    create(query, _history, _ai) {
        return `
Extract the following entities mentioned in the text below. Use NA if entities is not found:
${this.entityValue}

Text: 
${query}
`;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvbXB0cy9wcm9kdWN0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUUxRCxJQUFLLFdBTUo7QUFORCxXQUFLLFdBQVc7SUFDZCwyQ0FBNEIsQ0FBQTtJQUM1Qix5REFBMEMsQ0FBQTtJQUMxQywwREFBMkMsQ0FBQTtJQUMzQyw0REFBNkMsQ0FBQTtJQUM3Qyw0REFBNkMsQ0FBQTtBQUMvQyxDQUFDLEVBTkksV0FBVyxLQUFYLFdBQVcsUUFNZjtBQUVELElBQUssWUFPSjtBQVBELFdBQUssWUFBWTtJQUNmLG9DQUFvQixDQUFBO0lBQ3BCLGdEQUFnQyxDQUFBO0lBQ2hDLGdEQUFnQyxDQUFBO0lBQ2hDLG9EQUFvQyxDQUFBO0lBQ3BDLGtEQUFrQyxDQUFBO0lBQ2xDLGdEQUFnQyxDQUFBO0FBQ2xDLENBQUMsRUFQSSxZQUFZLEtBQVosWUFBWSxRQU9oQjtBQUVELElBQUssV0FVSjtBQVZELFdBQUssV0FBVztJQUNkLHFEQUFzQyxDQUFBO0lBQ3RDLDZDQUE4QixDQUFBO0lBQzlCLHdFQUF5RCxDQUFBO0lBQ3pELDREQUE2QyxDQUFBO0lBQzdDLHNEQUF1QyxDQUFBO0lBQ3ZDLHlEQUEwQyxDQUFBO0lBQzFDLG9DQUFxQixDQUFBO0lBQ3JCLDhEQUErQyxDQUFBO0lBQy9DLG9FQUFxRCxDQUFBO0FBQ3ZELENBQUMsRUFWSSxXQUFXLEtBQVgsV0FBVyxRQVVmO0FBV0Q7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLGlCQUFpQjtJQUNwQixXQUFXLENBQVM7SUFFNUIsWUFBWSxRQUF5QjtRQUNuQyxJQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUNyQixNQUFNLElBQUksS0FBSyxDQUFDLDRCQUE0QixDQUFDLENBQUM7U0FDL0M7UUFFRCwyQkFBMkI7UUFDM0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQ3JCLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUNyQixHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQ2xELEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQzdDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FDWCxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2QsQ0FBQztJQUVELFFBQVE7UUFDTixPQUFPO1lBQ0wsYUFBYSxFQUFFLENBQUMsT0FBTyxDQUFDO1NBQ3pCLENBQUM7SUFDSixDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQWEsRUFBRSxRQUFzQixFQUFFLEdBQWM7UUFDMUQsT0FBTzs7RUFFVCxJQUFJLENBQUMsV0FBVzs7O0VBR2hCLEtBQUs7Q0FDTixDQUFDO0lBQ0EsQ0FBQztDQUNGIn0=