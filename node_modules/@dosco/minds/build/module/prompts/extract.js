import flow from 'lodash/fp/flow';
import uniqBy from 'lodash/fp/uniqBy';
import reject from 'lodash/fp/reject';
import uniq from 'lodash/fp/uniq';
import map from 'lodash/fp/map';
import join from 'lodash/fp/join';
import isEmpty from 'lodash/fp/isEmpty';
export var BusinessInfo;
(function (BusinessInfo) {
    // Product stuff
    BusinessInfo["ProductName"] = "Product Name";
    BusinessInfo["ProductDescription"] = "Product Description";
    BusinessInfo["ProductModelNumber"] = "Product Model Number";
    BusinessInfo["ProductSerialNumber"] = "Product Serial Number";
    BusinessInfo["ProductPurchaseDate"] = "Product Purchase Date";
    // Purchases
    BusinessInfo["OrderID"] = "Order ID";
    BusinessInfo["OrderQuantity"] = "Order Quantity";
    BusinessInfo["AccountNumber"] = "Account Number";
    BusinessInfo["ShippingAddress"] = "Shipping Address";
    BusinessInfo["BillingAddress"] = "Billing Address";
    BusinessInfo["PaymentMethod"] = "Payment method";
    // SupportInfo
    BusinessInfo["CustomerName"] = "Senders Name";
    BusinessInfo["CustomerEmail"] = "Senders Email";
    BusinessInfo["CustomerPhone"] = "Senders Phone";
    BusinessInfo["ContactInformation"] = "Sender Contact Information";
    BusinessInfo["IssueClass"] = "Issue Class";
    BusinessInfo["IssueDescription"] = "Issue Description";
    BusinessInfo["IssueSummary"] = "Issue Summary";
    BusinessInfo["ErrorMessage"] = "Error Message";
    BusinessInfo["TroubleshootingStepsTaken"] = "Troubleshooting Steps Taken";
    BusinessInfo["SupportTicketNumber"] = "Support Ticket Number";
    BusinessInfo["SupportAgentName"] = "Support Agent Name";
    BusinessInfo["Feedback"] = "Feedback";
    BusinessInfo["OrderDetailsIncluded"] = "Order Details Included";
    BusinessInfo["ShippingDetailsIncluded"] = "Shipping Details Included";
    BusinessInfo["Priority"] = "Priority";
})(BusinessInfo || (BusinessInfo = {}));
/**
 * A prompt used for extracting information from customer support interactions
 * @export
 */
export class ExtractInfoPrompt {
    entityValue;
    constructor(entities) {
        if (isEmpty(entities)) {
            throw new Error(`No info defined to extract`);
        }
        // unique names and classes
        this.entityValue = flow(reject((v) => v.name === 'Text'), map((v) => ({ ...v, name: v.name?.trim().replace(/[^a-zA-Z ]+/, '') })), uniqBy((v) => v.name), map((v) => (v.classes ? [v.name, join(uniq(v.classes), ',')] : [v.name])), map(([n, c]) => `${n}:${c ? ` [${c}]` : ``}`), join('\n'))(entities);
    }
    metadata() {
        return {
            stopSequences: ['Text:'],
            keyValueResponse: true,
        };
    }
    create(query, _history, _ai) {
        return `
Extract the following entities mentioned in the text below. Use N/A if entity is not found::
${this.entityValue}

Text: 
${query}
`;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0cmFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm9tcHRzL2V4dHJhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxJQUFJLE1BQU0sZ0JBQWdCLENBQUM7QUFDbEMsT0FBTyxNQUFNLE1BQU0sa0JBQWtCLENBQUM7QUFDdEMsT0FBTyxNQUFNLE1BQU0sa0JBQWtCLENBQUM7QUFDdEMsT0FBTyxJQUFJLE1BQU0sZ0JBQWdCLENBQUM7QUFDbEMsT0FBTyxHQUFHLE1BQU0sZUFBZSxDQUFDO0FBQ2hDLE9BQU8sSUFBSSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xDLE9BQU8sT0FBTyxNQUFNLG1CQUFtQixDQUFDO0FBRXhDLE1BQU0sQ0FBTixJQUFZLFlBZ0NYO0FBaENELFdBQVksWUFBWTtJQUN0QixnQkFBZ0I7SUFDaEIsNENBQTRCLENBQUE7SUFDNUIsMERBQTBDLENBQUE7SUFDMUMsMkRBQTJDLENBQUE7SUFDM0MsNkRBQTZDLENBQUE7SUFDN0MsNkRBQTZDLENBQUE7SUFFN0MsWUFBWTtJQUNaLG9DQUFvQixDQUFBO0lBQ3BCLGdEQUFnQyxDQUFBO0lBQ2hDLGdEQUFnQyxDQUFBO0lBQ2hDLG9EQUFvQyxDQUFBO0lBQ3BDLGtEQUFrQyxDQUFBO0lBQ2xDLGdEQUFnQyxDQUFBO0lBRWhDLGNBQWM7SUFDZCw2Q0FBNkIsQ0FBQTtJQUM3QiwrQ0FBK0IsQ0FBQTtJQUMvQiwrQ0FBK0IsQ0FBQTtJQUMvQixpRUFBaUQsQ0FBQTtJQUNqRCwwQ0FBMEIsQ0FBQTtJQUMxQixzREFBc0MsQ0FBQTtJQUN0Qyw4Q0FBOEIsQ0FBQTtJQUM5Qiw4Q0FBOEIsQ0FBQTtJQUM5Qix5RUFBeUQsQ0FBQTtJQUN6RCw2REFBNkMsQ0FBQTtJQUM3Qyx1REFBdUMsQ0FBQTtJQUN2QyxxQ0FBcUIsQ0FBQTtJQUNyQiwrREFBK0MsQ0FBQTtJQUMvQyxxRUFBcUQsQ0FBQTtJQUNyRCxxQ0FBcUIsQ0FBQTtBQUN2QixDQUFDLEVBaENXLFlBQVksS0FBWixZQUFZLFFBZ0N2QjtBQU9EOzs7R0FHRztBQUNILE1BQU0sT0FBTyxpQkFBaUI7SUFDcEIsV0FBVyxDQUFTO0lBRTVCLFlBQVksUUFBeUI7UUFDbkMsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDckIsTUFBTSxJQUFJLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO1NBQy9DO1FBRUQsMkJBQTJCO1FBQzNCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUNyQixNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssTUFBTSxDQUFDLEVBQ2hDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQ3ZFLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUNyQixHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFDekUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFDN0MsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUNYLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDZCxDQUFDO0lBRUQsUUFBUTtRQUNOLE9BQU87WUFDTCxhQUFhLEVBQUUsQ0FBQyxPQUFPLENBQUM7WUFDeEIsZ0JBQWdCLEVBQUUsSUFBSTtTQUN2QixDQUFDO0lBQ0osQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUFhLEVBQUUsUUFBc0IsRUFBRSxHQUFjO1FBQzFELE9BQU87O0VBRVQsSUFBSSxDQUFDLFdBQVc7OztFQUdoQixLQUFLO0NBQ04sQ0FBQztJQUNBLENBQUM7Q0FDRiJ9